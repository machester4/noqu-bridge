{"version":3,"sources":["pages/Login/index.js","pages/board/NavBar/index.js","pages/board/header/item.js","pages/board/header/index.js","config/NoquBoard.js","pages/board/queue/StatItem.js","pages/board/queue/header.js","components/ProgressBar/index.js","pages/board/queue/index.js","pages/board/index.js","pages/routes.js","serviceWorker.js","index.js"],"names":["LoginPage","history","className","src","onSubmit","e","preventDefault","push","type","placeholder","NavBar","Item","title","body","footer","Header","jobStates","queuePageSize","StatItem","name","value","handleFilter","jobFilter","handleChange","useCallback","classNames","onClick","handleExpand","expanded","renderJobStates","useMemo","map","state","down","right","ProgressBar","percentage","style","width","Queue","useState","setExpanded","jobStateFilter","setJobStateFilter","paginator","setPaginator","jobs","Array","fill","id","date","progress","attemps","data","age","opts","handleExpandDetails","handleJobStateFilter","handleChangePaginator","dir","length","renderQueuesDetails","start","end","slice","job","key","collapseStringsAfterLength","collapsed","enableClipboard","onEdit","onAdd","onDelete","colSpan","BoardPage","Routes","path","component","exact","from","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8458869b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nfunction LoginPage({ history }) {\n  const handleLogin = e => {\n    e.preventDefault();\n    history.push(\"board\");\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"login-page\">\n        <div className=\"form\">\n          <div className=\"login-name-container\">\n            <img src=\"/assets/logo.png\" className=\"login-app-logo\" />\n            <span className=\"login-app-name\">Noqu</span>\n          </div>\n          <form className=\"login-form\" onSubmit={handleLogin}>\n            <input type=\"text\" placeholder=\"username\" />\n            <input type=\"password\" placeholder=\"password\" />\n            <button type=\"submit\">login</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction NavBar() {\n  return (\n    <div className=\"nav-bar\">\n      <img src=\"/assets/logo.png\" className=\"app-logo\" />\n      <span className=\"app-name\">Noqu</span>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction Item({ title, body, footer }) {\n  return (\n    <div className=\"header-item\">\n      <span className=\"header-title\">{title}</span>\n      <span className=\"header-body\">{body}</span>\n      <span className=\"header-footer\">{footer}</span>\n    </div>\n  );\n}\n\nexport default Item;\n","import React from \"react\";\nimport \"./styles.css\";\n\n// Components\nimport Item from \"./item\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <Item title=\"Version\" body=\"0.0.1\" footer=\"Redis 5.0.1\" />\n      <Item title=\"CPU Usage\" body=\"0.3%\" />\n      <Item title=\"Memory Usage\" body=\"0.3%\" footer=\"30 KB of 4 GB\" />\n      <Item title=\"Active\" body=\"8\" />\n      <Item title=\"Waiting\" body=\"3\" />\n    </div>\n  );\n}\n\nexport default Header;\n","export const jobStates = [\n  \"active\",\n  \"waiting\",\n  \"completed\",\n  \"failed\",\n  \"delayed\",\n  \"paused\"\n];\nexport const queueFields = [];\nexport const queuePageSize = 10;\n","import React, { useCallback } from \"react\";\n\n// Libs\nimport classNames from \"classnames\";\n\nfunction StatItem({ name, value, handleFilter, jobFilter }) {\n  const handleChange = useCallback(() => {\n    handleFilter(name);\n  }, [handleFilter, name]);\n  return (\n    <div\n      className={classNames(\"queue-state\", {\n        \"queue-state-active\": jobFilter === name\n      })}\n      onClick={handleChange}\n    >\n      <span className={classNames(\"queue-state-value\", name)}>{value}</span>\n      <span className=\"queue-state-name\">{name}</span>\n    </div>\n  );\n}\n\nexport default StatItem;\n","import React, { useMemo } from \"react\";\n\n// Libs\nimport classNames from \"classnames\";\n\n// Utils\nimport { jobStates } from \"../../../config/NoquBoard\";\n\n// Components\nimport StatItem from \"./StatItem\";\n\nfunction Header({ handleExpand, handleFilter, jobFilter, expanded }) {\n  const renderJobStates = useMemo(() => {\n    return jobStates.map(state => (\n      <StatItem\n        name={state}\n        value=\"3\"\n        handleFilter={handleFilter}\n        jobFilter={jobFilter}\n      />\n    ));\n  }, [handleFilter, jobFilter]);\n\n  return (\n    <div className=\"queue-header\">\n      <div className=\"queue-name-container\">\n        <span onClick={handleExpand}>\n          <i\n            className={classNames(\"icon-arrow\", {\n              down: expanded,\n              right: !expanded\n            })}\n          ></i>\n        </span>\n        <span className=\"queue-name\">Example</span>\n      </div>\n      <div className=\"queue-states\">{renderJobStates}</div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction ProgressBar({ percentage = 0 }) {\n  return (\n    <div className=\"bar-light-grey bar-tiny\">\n      <div\n        className=\"bar-container bar-green\"\n        style={{ width: `${percentage}%` }}\n      >\n        {percentage}%\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport \"./styles.css\";\n\n// Libs\nimport classNames from \"classnames\";\nimport ReactJson from \"react-json-view\";\n\n// Utils\nimport { queuePageSize, jobStates } from \"../../../config/NoquBoard\";\n\n// Components\nimport Header from \"./header\";\nimport ProgressBar from \"../../../components/ProgressBar\";\n\nfunction Queue({ name }) {\n  const [expanded, setExpanded] = useState(false);\n  const [jobStateFilter, setJobStateFilter] = useState(null);\n  const [paginator, setPaginator] = useState(0);\n\n  const jobs = Array(40).fill({\n    id: \"_abc\",\n    date: \"21/11/19\",\n    progress: 100,\n    attemps: 0,\n    data: { name: \"test\", age: 24 },\n    opts: {}\n  });\n\n  const handleExpandDetails = useCallback(() => {\n    if (!jobStateFilter) {\n      setJobStateFilter(jobStates[0]);\n    }\n    setExpanded(!expanded);\n  }, [expanded, jobStateFilter]);\n\n  const handleJobStateFilter = useCallback(\n    state => {\n      setJobStateFilter(state);\n      if (!expanded) handleExpandDetails();\n    },\n    [handleExpandDetails]\n  );\n\n  const handleChangePaginator = useCallback(\n    dir => {\n      if (dir === \"prev\") {\n        if (paginator > 0) setPaginator(paginator - 1);\n      } else if (paginator * queuePageSize < jobs.length) {\n        setPaginator(paginator + 1);\n      }\n    },\n    [paginator]\n  );\n\n  const renderQueuesDetails = useMemo(() => {\n    if (!jobStateFilter) return null;\n\n    const start = queuePageSize * paginator;\n    const end = queuePageSize * (paginator + 1);\n\n    return jobs.slice(start, end).map(job => (\n      <tr key={job.id}>\n        <td>{job.id}</td>\n        <td>{job.date}</td>\n        <td>\n          <ProgressBar percentage={job.progress} />\n        </td>\n        <td>{job.attemps}</td>\n        <td>\n          <ReactJson\n            src={job.data}\n            collapseStringsAfterLength={5}\n            collapsed\n            enableClipboard={false}\n            onEdit={false}\n            onAdd={false}\n            onDelete={false}\n          />\n        </td>\n        <td>\n          <ReactJson\n            src={job.opts}\n            collapseStringsAfterLength={5}\n            collapsed\n            enableClipboard={false}\n            onEdit={false}\n            onAdd={false}\n            onDelete={false}\n          />\n        </td>\n      </tr>\n    ));\n  }, [jobStateFilter, paginator]);\n\n  return (\n    <div className=\"queue\">\n      <Header\n        handleExpand={handleExpandDetails}\n        handleFilter={handleJobStateFilter}\n        expanded={expanded}\n        jobFilter={jobStateFilter}\n      />\n      <div\n        className={classNames(\"panel\", {\n          \"panel-expanded\": expanded,\n          \"panel-no-expanded\": !expanded\n        })}\n      >\n        <hr />\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>timestamps</th>\n              <th>progress</th>\n              <th>attemps</th>\n              <th>data</th>\n              <th>opts</th>\n            </tr>\n          </thead>\n          <tbody>{renderQueuesDetails}</tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={6}>\n                <div className=\"paginator\">\n                  <span\n                    className=\"prev-page\"\n                    onClick={() => handleChangePaginator(\"prev\")}\n                  >\n                    <i className=\"icon-arrow left\"></i>\n                    <i className=\"icon-arrow left\"></i>\n                  </span>\n                  <span className=\"page-count\">\n                    showing {queuePageSize * (paginator + 1)} of {jobs.length}\n                  </span>\n                  <span\n                    className=\"next-page\"\n                    onClick={() => handleChangePaginator(\"next\")}\n                  >\n                    <i className=\"icon-arrow right\"></i>\n                    <i className=\"icon-arrow right\"></i>\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Queue;\n","import React from \"react\";\nimport \"./styles.css\";\n\n// Components\nimport NavBar from \"./NavBar\";\nimport Header from \"./header\";\nimport Queue from \"./queue\";\n\n// Libs\nimport { StickyContainer, Sticky } from \"react-sticky\";\n\nfunction BoardPage() {\n  return (\n    <div className=\"page\">\n      <StickyContainer>\n        <Sticky>\n          {({ style }) => (\n            <header style={style}>\n              <NavBar />\n            </header>\n          )}\n        </Sticky>\n        <Header />\n      </StickyContainer>\n      <Queue />\n    </div>\n  );\n}\n\nexport default BoardPage;\n","import React from \"react\";\n\n// Router DOM\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// Pages\nimport LoginPage from \"./Login\";\nimport BoardPage from \"./board\";\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} exact />\n        <Route path=\"/board\" component={BoardPage} exact />\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./pages/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}